****************************************************************************************************************************************************
 
                                                                 MySQL Project

*****************************************************************************************************************************************************

*QUERIES :-


1)List all the columns of the Salespeople table.
--> describe salespeople;


2)List all customers with a rating of 100.
--> select * from customer where rating = 100;


3)Find all records in the Customer table with NULL values in the city column.
--> select * from customer where city is not NULL;


4)Find the largest order taken by each salesperson on each date.
--> select a.snum,a.sname,c.odate,max(c.amt) from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by  a.snum,a.sname,c.odate;


5)Arrange the Orders table by descending customer number.
--> select * from orders order by cnum desc;


6)Find which salespeople currently have orders in the Orders table.
-->select a.snum ,a.sname,c.onum from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by  a.snum,a.sname,c.onum;


7)List names of all customers matched with the salespeople serving them.
-->select a.snum ,a.sname,b.cnum,b.cname from salespeople a,customer b, orders c where a.snum=b.snum  group by  a.snum,a.sname,b.cnum,b.cname;


8)Find the names and numbers of all salespeople who had more than one customer.
--> select a.snum ,a.sname from salespeople a where 1<(select count(*)from customer b where a.snum=b.snum);


9)Count the orders of each of the salespeople and output the results in descending order.
--> select a.snum,b.cnum,count(c.onum) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum,b.cnum order by a.snum desc;


10)List the Customer table if and only if one or more of the customers in the Customer table are located in San Jose.
--> select c.cnum,c.cname,c.city from customer c where exists (select * from customer where city='San Jose');


11)Match salespeople to customers according to what city they lived in.
--> select b.cname,b.city,a.sname,a.city FROM salespeople a,customer b WHERE a.city=b.city;
    Or
    select a.sname,b.cname,b.city from salespeople a,customer b where a.snum=b.snum  group by a.snum,b.cnum, b.city;


12)Find the largest order taken by each salesperson.
--> select a.snum,a.sname,max(c.amt) from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum,a.sname;


13)Find customers in San Jose who have a rating above 200.
--> select * from customer where city='San Jose' and rating>200;


14)List the names and commissions of all salespeople in London.
--> select sname,comm from salespeople where city='London';


15)List all the orders of salesperson Motika from the Orders table.
--> select a.snum,a.sname,c.onum from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and a.sname='Motika';


16)Find all customers with orders on October 3.
--> select * from customer a,orders b where a.cnum=b.cnum and b.odate='1996-03-10';


17)Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not above the MAX amount.
--> select odate, sum(amt) as total from orders group by odate having total > (select max(amt) from orders);


18)Select all orders that had amounts that were greater than at least one of the orders from October 6.
--> select * from orders where amt > any (select amt from orders where odate='1996-06=10');


19)Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300
--> select sname from salespeople where exists (select cname from customer where snum=salespeople.snum and rating =300);


20)Find all pairs of customers having the same rating.
--> select a.cname, b.cname, a.rating from customer a ,customer b where a.rating=b.rating and a.cnum != b.cnum;


21)Find all customers whose CNUM is 1000 above the SNUM of Serres.
--> select cnum,cname from customer where cnum > (select snum+1000 from salespeople where sname= 'Serres');


22)Give the salespeople’s commissions as percentages instead of decimal numbers.
--> SELECT AVG(comm*100) FROM salespeople;


23)Find the largest order taken by each salesperson on each date, eliminating those MAX orders which are less than $3000.00 in value.
--> select a.snum, a.sname, c.odate, max(c.amt) as largestOrder from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum,a.sname, c.odate having largestOrder>=3000;


24)List the largest orders for October 3, for each salesperson.
--> select a.snum,a.sname,c.odate,max(c.amt) from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and c.odate='1996-03-10' group by  a.snum,a.sname,c.odate;


25)Find all customers located in cities where Serres (SNUM 1002) has customers.
--> Select cname from customer where city = ( select city from customer, salespeople where customer.snum = salespeople.snum and sname = 'Serres');
    select b.sname,a.cname , a.city, a.snum from customer a,salespeople b where a.snum=b.snum having snum=1002; 
    
    
26)Select all customers with a rating above 200.00.
--> select * from customer where rating > 200;


27)Count the number of salespeople currently listing orders in the Orders table.
--> Select count(distinct a.snum) from salespeople a, customer b,orders c where a.snum=b.snum and b.cnum=c.cnum;


28)Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customer’s name and the salesperson’s rate of commission.
--> select a.cname,b.snum ,b.comm*100 from customer a, salespeople b where a.snum=b.snum and b.comm > .12; 


29)Find salespeople who have multiple customers.
--> Select sname, snum from salespeople where snum in ( select snum from customer group by snum having count(snum) > 1 );


30)Find salespeople with customers located in their city.
-->  select a.city,a.sname,b.city,b.cname from salespeople a,customer b where a.snum=b.snum and a.city=b.city;


31)Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
--> SELECT * FROM salespeople WHERE sname LIKE 'P__l%';


32)Write a query that uses a subquery to obtain all orders for the customer named Cisneros.Assume you do not know his customer number.
--> SELECT onum , cnum FROM orders WHERE cnum= (SELECT cnum FROM customer WHERE cname='cisneros');


33)Find the largest orders for Serres and Rifkin.
--> select a.snum,max(c.amt) from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum  group by  a.snum,a.sname having a.sname='Serres'or a.sname='Rifkin';


34)Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.
--> select snum,sname,comm,city from salespeople;


35)Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.
--> select * from customer where substring(cname,1,1) between "A" and "G";


36)Select all the possible combinations of customers that you can assign.
-->  select a.snum ,a.sname,b.cname,b.cnum,c.onum from salespeople a,customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by  a.snum,a.sname,b.cname,b.cnum,c.onum;



37)Select all orders that are greater than the average for October 4.
-->  Select * from orders where amt > ( select avg(amt) from orders where odate = '1996-04-10');



38)Write a select command using a corelated subquery that selects the names and numbers of all customers with ratings equal to the maximum for their city.
--> Select a.cnum, a.cname from customer a where a.rating = ( select max(rating) from customer b  where a.city = b.city);


39)Write a query that totals the orders for each day and places the results in descending order.
--> Select odate, count(onum) from orders group by odate order by count(onum) desc;


40)Write a select command that produces the rating followed by the name of each customer in San Jose.
--> select cname,rating,city from customer where city='San Jose';
    SELECT rating||' '||cname "employee rating" FROM customer WHERE city='san jose';


41)Find all orders with amounts smaller than any amount for a customer in San Jose.
-->  Select onum, amt from orders
where amt < any ( select amt from orders, customer where city = 'San Jose' and orders.cnum = customer.cnum);
                                                   OR
                                                   Select onum, amt from orders
where amt < ( select max(amt) from orders, customer where city = 'San Jose' and orders.cnum = customer.cnum);




42) Find all orders with above average amounts for their customers.
-->select onum, cnum, amt from orders a where amt > (  select avg(amt) from orders b where a.cnum = b.cnum group by cnum);




43) Write a query that selects the highest rating in each city.
-->
Select a.cnum, a.cname , a.rating , a.city from customer a                         ||here in all city compare n then display all high rating 
where a.rating = (  select max(rating) from customer b where a.city = b.city);     ||
                                      or
                     SELECT max(rating) FROM customer;                             || in all city high rating only one ans.





44) Write a query that calculates the amount of the salesperson’s commission on each order by a
customer with a rating above 100.00
-->
 SELECT sname,amt,comm
 FROM salespeople 
 JOIN customer using(snum) 
 JOIN orders using(cnum)
 WHERE rating>100;




45)Count the customers with ratings above San Jose’s average.
-->  Select cnum, rating from customer
where rating > ( select avg(rating)from customer where city = 'San Jose');



46)Write a query that produces all pairs of salespeople with themselves as well as duplicate rows
with the order reversed.
--> (select * from salespeople) union all (select * from salespeople) order by sname desc;
						OR
( check it is correct or not select * from salespeople a, salespeople b where a.snum > b.snum;)




47)Find all salespeople that are located in either Barcelona or London.
--> select sname , city from salespeople where city ='London' or city= 'Barcelona';



48)Find all salespeople with only one customer.
Select cname, sname, snum 
  from salespeople
  JOIN customer using(snum)
  where snum in ( select snum from customer group by snum having count(snum) =1 );



49)Write a query that joins the Customer table to itself to find all pairs of customers served by a
single salesperson.
--> 
select  snum ,sname , cname 
  from customer a
  join salespeople b using(snum)
  where snum in (select snum from customer group by snum having count(snum) > 1);



50) Write a query that will give you all orders for more than $1000.00
--> select onum , amt 
  from orders 
  where amt >1000.00;



51) Write a query that lists each order number followed by the name of the customer who made
that order.
-->
select  onum , cname
  from orders 
  join customer using (cnum)
  order by onum asc;
  
  

52)Write 2 queries that select all salespeople (by name and number) who have customers in their cities who they 
do not service, one using a join and one a corelated subquery. Which solution is more elegant?
-->  1) Select distinct cname from cust a, salespeople b where a.city = b.city and a.snum != b.snum;  
     2)  Select cname from cust where cname in ( select cname from cust a, salespeople b
     where a.city = b.city and a.snum != b.snum );


  
53)Write a query that selects all customers whose ratings are equal to or greater than ANY (in the
SQL sense) of Serres’?
-->
select cname from customer 
 join salespeople using (snum)
 where  rating >= any ( select rating from customer
			where snum = (select snum from salespeople where sname = 'Serres'));


54)Write 2 queries that will produce all orders taken on October 3 or October 4.
--> select onum , amt , odate from orders where odate='1996-10-03' or odate='1996-10-04';



55)Write a query that produces all pairs of orders by a given customer. Name that customer and
eliminate duplicates.
-->select distinct cname from orders a join customer b using(cnum) where  a.cnum=b.cnum;



56)Find only those customers whose ratings are higher than every customer in Rome.
--> select cname , rating from customer where rating >(select avg(rating) from customer where city = 'Rome');



57)Write a query on the Customers table whose output will exclude all customers with a rating <=
100.00, unless they are located in Rome.
-->select cname , rating ,city from customer where rating >=100 and city !='Rome';



58)Find all rows from the Customers table for which the salesperson number is 1001.
--> select * from customer where snum='1001';




59)Find the total amount in Orders for each salesperson for whom this total is greater than the
amount of the largest order in the table.
--> select a.snum,a.sname, sum(c.amt) as totalorder from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum 
group by a.snum, a.sname having totalorder > (select max(amt) from orders);




60)Write a query that selects all orders save those with zeroes or NULLs in the amount field.
--> select * from orders where amt ='NULL';
  


61)Produce all combinations of salespeople and customer names such that the former precedes
the latter alphabetically, and the latter has a rating of less than 200.
--> SELECT cname AS Customername,sname AS Salespeoplename FROM salespeople,customer WHERE 
customer.snum=salespeople.snum AND cname < sname AND rating < 200



62)List all Salespeople’s names and the Commission they have earned.
-->  select sname ,comm from salespeople;



63)Write a query that produces the names and cities of all customers with the same rating as
Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be
usable if his rating changed.
-->  Select cname, city from customer where rating = (select rating from customer where cname = 'Hoffman') and cname != 'Hoffman';



64)Find all salespeople for whom there are customers that follow them in alphabetical order.
--> select sname from salespeople where sname < any ( select cname from customer where salespeople.snum = customer.snum); 



65)Write a query that produces the names and ratings of all customers of all who have above average orders.
-->SELECT cname,rating FROM customer WHERE cnum IN (SELECT cnum FROM orders WHERE amt > (SELECT avg(amt) FROM orders));



66)Find the SUM of all purchases from the Orders table.
--> select sum(amt) from orders;



67)Write a SELECT command that produces the order number, amount and date for all rows in the order table.
--> select onum,amt,odate from orders;



68)Count the number of nonNULL rating fields in the Customers table (including repeats).
-->  select count(cname) from customer where rating is not null;



69)Write a query that gives the names of both the salesperson and the customer for each order after the order number.
--> select c.onum,a.sname,b.cname from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum;



70)List the commissions of all salespeople servicing customers in London.
--> select a.snum,a.sname,a.comm,b.cnum,b.cname from salespeople a, customer b where a.snum=b.snum;



71)Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.
--> select a.sname, a.city ,b.cname, b.city from salespeople a, customer b, where a.snum=b.snum and a.city != ANY 
(select city from customer c where a.snum=c.snum and c.city=b.city);



72)Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.
-->  select a.snum, a.sname from salespeople a  where exists (select b.cnum from customer b where a.city=b.city and a.snum!=b.snum );



73)Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field relates the two tables to one another.)
--> select * from customer where snum in (select snum from salespeople where sname='Peel' or sname='Motika');



74)Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she 
should be counted only once.)
--> select count(odate) || 'SALES PERSON REGISTRED ON' "TOTAL" ,odate from orders group by odate;



75)Find all orders attributed to salespeople in London.
-->  select a.snum,c.onum from salespeople a,customer b,orders c where a.snum=b.snum and b.cnum=c.cnum and a.city='London';



76)Find all orders by customers not located in the same cities as their salespeople.
--> select a.city,b.city,c.onum from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.city !=b.city;



77)Find all salespeople who have customers with more than one current order.
--> select distinct(a.snum), a.sname from orders c, customer b, salespeople a where c.cnum=b.cnum and a.snum=b.snum group by 
   c.cnum having count(*) > 1;
   
   
   
78)Write a query that extracts from the Customers table every customer assigned to a salesperson who currently has at least one other customer (besides the customer being selected) with orders in the Orders table.
--> select x.cnum, y.onum from customer x, orders y where x.cnum=y.cnum and (select count(*) 'count' from salespeople a, customer b where a.snum=b.snum and a.snum =x.snum group by a.snum having count>1);




79)Write a query that selects all customers whose names begin with ‘C'.
-->  select * from customer where cname like 'C%';



80)Write a query on the Customers table that will find the highest rating in each city. Put the output in this form : for the city (city) the highest rating is : (rating).
--> select city 'For the City :-' , max(rating) 'Highest Rating is' from customer group by city;




81)Write a query that will produce the SNUM values of all salespeople with orders currently in the Orders table (without any repeats).
--> select distinct (a.snum) from customer a, orders b where a.cnum=b.cnum;



82)Write a query that lists customers in descending order of rating. Output the rating field first, followed by the customer’s names and numbers.
-->  select rating,cname,cnum from customer order by rating desc;



83)Find the average commission for salespeople in London.
--> select avg(comm) from salespeople where city='London';



84)Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
--> select a.onum, a.amt, a.odate, a.cnum from orders a, customer b where a.cnum=b.cnum and b.snum = (select snum from customer c where c.cnum=2001);



85)Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).
--> select * from salespeople where comm between 0.10 and 0.12;



86)Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.
--> select sname,city from salespeople where city='London' and comm > 0.10;



87)What will be the output from the following query?
SELECT * FROM ORDERS where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum > 2003));
--> 
OUTPUT:- 
+------+---------+------------+------+
| onum | amt     | odate      | cnum |
+------+---------+------------+------+
| 3001 |   18.69 | 1996-03-10 | 2008 |
| 3002 | 1900.10 | 1996-03-10 | 2007 |
| 3003 |  767.19 | 1996-03-10 | 2001 |
| 3005 | 5160.45 | 1996-03-10 | 2003 |
| 3006 | 1098.16 | 1996-03-10 | 2008 |
| 3007 |   75.75 | 1996-04-10 | 2002 |
| 3008 | 4723.00 | 1996-05-10 | 2006 |
| 3009 | 1713.23 | 1996-04-10 | 2002 |
| 3010 | 1309.95 | 1996-06-10 | 2004 |
| 3011 | 9891.88 | 1996-06-10 | 2006 |
+------+---------+------------+------+




88)Write a query that selects each customer’s smallest order.
--> select b.cnum,b.cname, min(a.amt) from orders a, customer b where a.cnum=b.cnum group by b.cname,b.cnum;



89)Write a query that selects the first customer in alphabetical order whose name begins with G.
--> select * from customer where cname like 'G%' order by cname limit 1;
    OR
     select min(cname) from customer where cname like 'G%';
     
     

90)Write a query that counts the number of different nonNULL city values in the Customers table.
--> select count(distinct(city)) from customer where city is not null;


91)Find the average amount from the Orders table.
--> select avg(amt) from orders;



92)What would be the output from the following query?
SELECT * FROM ORDERS WHERE NOT (odate = 10/03/96 OR snum > 1006) AND amt >=1500;
-->
OUTPUT:-
ERROR 1054 (42S22): Unknown column 'snum' in 'where clause'



93)Find all customers who are not located in San Jose and whose rating is above 200.
--> select * from customer where city != 'San Jose' and rating > 200;



94)Give a simpler way to write this query :
SELECT snum, sname city, comm FROM salespeople WHERE (comm > + 0.12 OR comm < 0.14);
--> select * from salespeople;



95)Evaluate the following query:
SELECT * FROM orders WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00);
--> 
OUTPUT:-
ERROR 1054 (42S22): Unknown column 'snum' in 'where clause'



96)Which salespersons attend to customers not in the city they have been assigned to?
--> select a.snum,a.sname from salespeople a, customer b where a.snum=b.snum and a.city != b.city;



97)Which salespeople get commission greater than 0.11 are serving customers rated less than 250?
--> select a.sname from salespeople a, customer b where a.snum=b.snum and a.comm > 0.11 and b.rating < 250;



98)Which salespeople have been assigned to the same city but get different commission percentages?
--> select a.sname, b.sname from salespeople a, salespeople b where a.city=b.city and a.comm != b.comm;


99)Which salesperson has earned the most by way of commission?
--> select b.snum, c.sname, sum(c.comm*a.amt) 'commission' from orders a, customer b, salespeople c where a.cnum=b.cnum and b.snum=c.snum group by b.snum order by commission desc limit 1;



100)Does the customer who has placed the maximum number of orders have the maximum rating?
--> select b.cnum, b.cname, count(*) 'kount' from orders a, customer b where a.cnum=b.cnum and b.rating = (select max(rating) from customer) group by b.cnum having kount = (select count(*) 'count' from orders a, customer b where a.cnum=b.cnum group by b.cnum order by count desc limit 1);



101)Has the customer who has spent the largest amount of money been given the highest rating?
--> select m.cnum, m.rating, sum(n.amt) 'totalq' from orders n, customer m where n.cnum=m.cnum and rating=(select max(z.rating) from customer z) group by m.cnum having totalq = (select max(x.total) from (select b.cnum, sum(a.amt) 'total' from orders a, customer b where a.cnum=b.cnum group by b.cnum) x);



102)List all customers in descending order of customer rating.
--> select * from customer order by rating desc;



103)On which days has Hoffman placed orders?
--> select a.odate,b.cnum from orders a, customer b where a.cnum=b.cnum and b.cname='Hoffman';



104)Do all salespeople have different commissions?
--> select "yes" as "output" from dual where (select count(*) from salespeople) = (select count(distinct(comm)) from salespeople)
    UNION
    select "no" from dual where (select count(*) from salespeople) != (select count(distinct(comm)) from salespeople);
 


105)Which salespeople have no orders between 10/03/1996 and 10/05/1996?
--> select * from orders m, customer n where m.cnum=n.cnum and n.snum not in (select distinct(b.snum) from orders a, customer b where a.cnum=b.cnum and a.odate between '1996-10-03' and '1996-10-05');



106)How many salespersons have succeeded in getting orders?
--> select count(distinct(b.snum)) from orders a, customer b where a.cnum=b.cnum;



107)How many customers have placed orders?
--> select count(distinct(cnum)) from orders;



108)On which date has each salesperson booked an order of maximum value?
--> select r.snum, r.sname, p.amt, p.odate from orders p, customer q, salespeople r where p.cnum=q.cnum and q.snum=r.snum and p.amt = (select max(a.amt) from orders a, customer b where a.cnum=b.cnum and b.snum=r.snum);



109)Who is the most successful salesperson?
--> select a.snum, a.sname, sum(c.amt) 'total' from orders c, customer b, salespeople a where c.cnum=b.cnum and b.snum=a.snum group by b.snum order by total desc limit 1;




110)Who is the worst customer with respect to the company?
--> select b.cnum, b.cname, sum(a.amt) 'total' from orders a, customer b where a.cnum=b.cnum group by b.cnum order by total asc limit 1;




111) Are all customers not having placed orders greater than 200 totally been serviced by salespersons Peel or Serres?
-->  select a.snum,a.sname, b.cnum, b.cname, c.amt, c.onum from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and c.amt < 200;




112)Which customers have the same rating?
--> select a.cname,b.cname from customer a, customer b where a.cnum != b.cnum and a.rating=b.rating;




113)Find all orders greater than the average for October 4th.
--> select * from orders where amt > (select avg(amt) from orders where odate='1996-10-04');



114)Which customers have above average orders?
--> select distinct(b.cnum), a.cname,b.amt from customer a, orders b where a.cnum=b.cnum and b.amt > (select avg(amt) from orders);



115)List all customers with ratings above San Jose’s average.
--> select * from customer where rating > (select avg(rating) from customer where city='San Jose');



116)Select the total amount in orders for each salesperson for whom the total is greater than the amount of the largest order in the table.
--> select a.sname, b.snum, sum(c.amt) 'Sum' from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by b.snum having Sum > (select max(amt) from orders);



117)Give names and numbers of all salespersons who have more than one customer.
--> select a.sname,b.snum, count(*) from salespeople a, customer b where a.snum= b.snum group by snum having count(*) >1;



118)Select all salespersons by name and number who have customers in their city whom they don’t service.
--> select distinct(a.snum), a.sname from salespeople a, customer b where a.snum != b.snum and a.city=b.city;




119)Which customers’ rating should be lowered?
--> select a.cname,a.rating,sum(b.amt) 'totalorder' from customer a, orders b where a.cnum=b.cnum group by a.cname,a.rating order by totalorder desc;




120)Is there a case for assigning a salesperson to Berlin?
--> select 'Yes' as 'Output' from dual where not exists (select * from customer a, salespeople b where a.snum=b.snum and a.city='Berlin')
	Union
      select 'No' as 'Output' from dual where exists (select * from customer a, salespeople b where a.snum=b.snum and a.city='Berlin');		



121)Is there any evidence linking the performance of a salesperson to the commission that he or she is being paid?
--> select b.snum, sum(c.amt), a.comm from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum group by b.snum;




122)Does the total amount in orders by customer in Rome and London exceed the commission paid to salespersons in 
London and New York by more than 5 times?
--> 
first calculate:- select sum(a.amt) from orders a, customer b where a.cnum=b.cnum and b.city in ('London','Rome');
next calculate:- select 5*sum(c.amt*a.comm) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.city in ('London','New York');

then use below query:- 
select 'Yes' as 'Output' from dual where (select sum(a.amt) from orders a, customer b where a.cnum=b.cnum and b.city in ('London','Rome')) > 
(select 5*sum(c.amt*a.comm) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.city in ('London','New York'))
Union
select 'NO' as 'Output' from dual where (select sum(a.amt) from orders a, customer b where a.cnum=b.cnum and b.city in ('London','Rome')) <= 
(select 5*sum(c.amt*a.comm) from salespeople a, customer b, orders c where a.snum=b.snum and b.cnum=c.cnum and a.city in ('London','New York'));



123)Which is the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained?
--> select a.odate,a.onum,a.amt,c.city, c.sname from orders a, customer b, salespeople c where a.cnum=b.cnum and b.snum=c.snum 
and a.amt = (select max(x.amt) from orders x, customer y where x.cnum=y.cnum and y.snum=c.snum group by y.snum); 



124)Which salesperson(s) should be fired?
--> select a.snum,a.sname, sum(c.amt) from salespeople a, customer b,orders c where a.snum=b.snum and b.cnum=c.cnum group by a.snum;



125)What is the total income for the company?
--> select sum(amt) from orders;




